(function(){define(["utilities/global","controllers/application"],function(){var e=window.LSP,t=e.utilities;t.register("model","api",{_timeout:15e3,_url:function(e,t){return""},_payload:function(e,t){return t},_isSuccess:function(e){return(e||{}).success===!0},_afterSuccess:function(e){return e},_request:function(n,r,i,s,o,u){var a=$.Deferred(),f={};return $.support.cors=!0,f.xhrData={type:n,url:this._url(i,o),data:this._payload(i,o),crossDomain:!0,dataType:r,context:this,timeout:this._timeout,passthrough:$.extend({},u)},console.log("API Request Sent via "+s,f.xhrData),$(e.controllers.application).triggerHandler("onBeforeAPICall",f),$(i).triggerHandler("onBeforeAPICall",f),$(i).triggerHandler(t.camelCase("on-Before-API-"+s+"-call"),f),$.ajax(f.xhrData).done(function(e){f.serverResponse=e;try{f.response=$.parseJSON(e)}catch(t){f.response=e}this._isSuccess(e)?(f.response=this._afterSuccess(f.response),a.resolve(f)):(f.error="invalidFormat",a.reject(f))}).fail(function(e){f.serverResponse=e;try{f.response=$.parseJSON(e.responseText)}catch(t){f.response=e}a.reject(f)}).always(function(){console.log("API Response Recieved via "+s,f)}),$.when(a).done(function(n){$(e.controllers.application).triggerHandler("onAfterAPICallSuccess",n),$(i).triggerHandler("onAfterAPICallSuccess",n),$(i).triggerHandler(t.camelCase("on-after-API-"+s+"-success"),n)}).fail(function(n){$(e.controllers.application).triggerHandler("onAfterAPICallFailure",n),$(i).triggerHandler("onAfterAPICallFailure",n),$(i).triggerHandler(t.camelCase("on-after-API-"+s+"-failure"),n)}).always(function(n){$(e.controllers.application).triggerHandler("onAfterAPICall",n),$(i).triggerHandler("onAfterAPICall",n),$(i).triggerHandler(t.camelCase("on-after-API-"+s),n)}),a.promise()},request:function(e,t,n,r){return this._request("GET","jsonp",e,t,n,r)}})})})();